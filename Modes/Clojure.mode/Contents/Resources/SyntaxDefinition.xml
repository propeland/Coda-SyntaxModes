<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "syntax.dtd">
<syntax>

    <head>
        <name>C</name> <!-- The definitions title -->
        <charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@*-=+]]></charsintokens> <!-- Valid Characters for Variables -->
        <!-- <charsdelimitingtokens></charsdelimitingtokens> -->
    </head>

    <states>
    
        <default id="Base" color="#000" background-color="#fff" font-weight="normal" font-style="normal">
            <keywords id="Special Forms in Clojure" color="#7F00BF" useforautocomplete="yes">
				<string>def</string>
				<string>if</string>
				<string>do</string>
				<string>let</string>
				<string>quote</string>
				<string>var</string>
				<string>fn</string>
				<string>loop</string>
				<string>recur</string>
				<string>throw</string>
				<string>try</string>
				<string>monitor-enter</string>
				<string>monitor-exit</string>
				<string>set!</string>
				<string>new</string>
            </keywords>
            <keywords id="Keywords" color="#003FBF" useforautocomplete="yes">
  	    <regex>[*][:A-Za-z0-9_-]+[*]</regex>
	    <string>&gt;</string>
	    <string>&gt;=</string>
	    <string>&lt;</string>
	    <string>&lt;=</string>
	    <string>+</string>
	    <string>-&gt;</string>
	    <string>-</string>
	    <string>..</string>
	    <string>/</string>
	    <string>=</string>
	    <string>==</string>
	    <string>accessor</string>
	    <string>aclone</string>
	    <string>add-classpath</string>
	    <string>add-watch</string>
	    <string>add-watcher</string>
	    <string>agent-errors</string>
	    <string>agent</string>
	    <string>aget</string>
	    <string>alength</string>
	    <string>alias</string>
	    <string>all-ns</string>
	    <string>alter-meta!</string>
	    <string>alter-var-root</string>
	    <string>alter</string>
	    <string>amap</string>
	    <string>ancestors</string>
	    <string>and</string>
	    <string>apply</string>
	    <string>areduce</string>
	    <string>array-map</string>
	    <string>aset-boolean</string>
	    <string>aset-byte</string>
	    <string>aset-char</string>
	    <string>aset-double</string>
	    <string>aset-float</string>
	    <string>aset-int</string>
	    <string>aset-long</string>
	    <string>aset-short</string>
	    <string>aset</string>
	    <string>assert</string>
	    <string>assoc!</string>
	    <string>assoc-in</string>
	    <string>assoc</string>
	    <string>associative?</string>
	    <string>atom</string>
	    <string>await-for</string>
	    <string>await1</string>
	    <string>await</string>
	    <string>bases</string>
	    <string>bean</string>
	    <string>bigdec</string>
	    <string>bigint</string>
	    <string>binding</string>
	    <string>bit-and-not</string>
	    <string>bit-and</string>
	    <string>bit-clear</string>
	    <string>bit-flip</string>
	    <string>bit-not</string>
	    <string>bit-or</string>
	    <string>bit-set</string>
	    <string>bit-shift-left</string>
	    <string>bit-shift-right</string>
	    <string>bit-test</string>
	    <string>bit-xor</string>
	    <string>boolean</string>
	    <string>butlast</string>
	    <string>byte</string>
	    <string>cast</string>
	    <string>char-escape-string</string>
	    <string>char-name-string</string>
	    <string>char</string>
	    <string>chunk-append</string>
	    <string>chunk-buffer</string>
	    <string>chunk-cons</string>
	    <string>chunk-first</string>
	    <string>chunk-next</string>
	    <string>chunk-rest</string>
	    <string>chunk</string>
	    <string>chunked-seq?</string>
	    <string>class</string>
	    <string>class?</string>
	    <string>clear-agent-errors</string>
	    <string>clojure-version</string>
	    <string>coll?</string>
	    <string>comment</string>
	    <string>commute</string>
	    <string>comp</string>
	    <string>comparator</string>
	    <string>compare-and-set!</string>
	    <string>compare</string>
	    <string>compile</string>
	    <string>complement</string>
	    <string>concat</string>
	    <string>cond</string>
	    <string>condp</string>
	    <string>conj!</string>
	    <string>conj</string>
	    <string>cons</string>
	    <string>constantly</string>
	    <string>construct-proxy</string>
	    <string>contains?</string>
	    <string>count</string>
	    <string>counted?</string>
	    <string>create-ns</string>
	    <string>create-struct</string>
	    <string>cycle</string>
	    <string>dec</string>
	    <string>decimal?</string>
	    <string>declare</string>
	    <string>definline</string>
	    <string>defmacro</string>
	    <string>defmethod</string>
	    <string>defmulti</string>
	    <string>defn-</string>
	    <string>defn</string>
	    <string>defonce</string>
	    <string>defstruct</string>
	    <string>delay</string>
	    <string>delay?</string>
	    <string>deliver</string>
	    <string>deref</string>
	    <string>derive</string>
	    <string>descendants</string>
	    <string>destructure</string>
	    <string>disj</string>
	    <string>dissoc!</string>
	    <string>dissoc</string>
	    <string>distinct</string>
	    <string>distinct?</string>
	    <string>doall</string>
	    <string>doc</string>
	    <string>dorun</string>
	    <string>doseq</string>
	    <string>dosync</string>
	    <string>dotimes</string>
	    <string>doto</string>
	    <string>double-array</string>
	    <string>double</string>
	    <string>doubles</string>
	    <string>drop-last</string>
	    <string>drop-while</string>
	    <string>drop</string>
	    <string>empty</string>
	    <string>empty?</string>
	    <string>ensure</string>
	    <string>enumeration-seq</string>
	    <string>eval</string>
	    <string>even?</string>
	    <string>every?</string>
	    <string>false?</string>
	    <string>ffirst</string>
	    <string>file-seq</string>
	    <string>filter</string>
	    <string>find-doc</string>
	    <string>find-ns</string>
	    <string>find-var</string>
	    <string>find</string>
	    <string>first</string>
	    <string>float-array</string>
	    <string>float</string>
	    <string>float?</string>
	    <string>floats</string>
	    <string>flush</string>
	    <string>fn</string>
	    <string>fn?</string>
	    <string>fnext</string>
	    <string>for</string>
	    <string>force</string>
	    <string>format</string>
	    <string>future-call</string>
	    <string>future-cancel</string>
	    <string>future-cancelled?</string>
	    <string>future-done?</string>
	    <string>future</string>
	    <string>future?</string>
	    <string>gen-class</string>
	    <string>gen-interface</string>
	    <string>gensym</string>
	    <string>get-in</string>
	    <string>get-method</string>
	    <string>get-proxy-class</string>
	    <string>get-validator</string>
	    <string>get</string>
	    <string>hash-map</string>
	    <string>hash-set</string>
	    <string>hash</string>
	    <string>identical?</string>
	    <string>identity</string>
	    <string>if-let</string>
	    <string>if-not</string>
	    <string>ifn?</string>
	    <string>import</string>
	    <string>in-ns</string>
	    <string>inc</string>
	    <string>init-proxy</string>
	    <string>instance?</string>
	    <string>int-array</string>
	    <string>int</string>
	    <string>integer?</string>
	    <string>interleave</string>
	    <string>intern</string>
	    <string>interpose</string>
	    <string>into-array</string>
	    <string>into</string>
	    <string>ints</string>
	    <string>io!</string>
	    <string>isa?</string>
	    <string>iterate</string>
	    <string>iterator-seq</string>
	    <string>juxt</string>
	    <string>key</string>
	    <string>keys</string>
	    <string>keyword</string>
	    <string>keyword?</string>
	    <string>last</string>
	    <string>lazy-cat</string>
	    <string>lazy-seq</string>
	    <string>let</string>
	    <string>letfn</string>
	    <string>line-seq</string>
	    <string>list*</string>
	    <string>list</string>
	    <string>list?</string>
	    <string>load-file</string>
	    <string>load-reader</string>
	    <string>load-string</string>
	    <string>load</string>
	    <string>loaded-libs</string>
	    <string>locking</string>
	    <string>long-array</string>
	    <string>long</string>
	    <string>longs</string>
	    <string>loop</string>
	    <string>macroexpand-1</string>
	    <string>macroexpand</string>
	    <string>make-array</string>
	    <string>make-hierarchy</string>
	    <string>map</string>
	    <string>map?</string>
	    <string>mapcat</string>
	    <string>max-key</string>
	    <string>max</string>
	    <string>memfn</string>
	    <string>memoize</string>
	    <string>merge-with</string>
	    <string>merge</string>
	    <string>meta</string>
	    <string>method-sig</string>
	    <string>methods</string>
	    <string>min-key</string>
	    <string>min</string>
	    <string>mod</string>
	    <string>name</string>
	    <string>namespace</string>
	    <string>neg?</string>
	    <string>newline</string>
	    <string>next</string>
	    <string>nfirst</string>
	    <string>nil?</string>
	    <string>nnext</string>
	    <string>not-any?</string>
	    <string>not-empty</string>
	    <string>not-every?</string>
	    <string>not</string>
	    <string>not=</string>
	    <string>ns-aliases</string>
	    <string>ns-imports</string>
	    <string>ns-interns</string>
	    <string>ns-map</string>
	    <string>ns-name</string>
	    <string>ns-publics</string>
	    <string>ns-refers</string>
	    <string>ns-resolve</string>
	    <string>ns-unalias</string>
	    <string>ns-unmap</string>
	    <string>ns</string>
	    <string>nth</string>
	    <string>nthnext</string>
	    <string>num</string>
	    <string>number?</string>
	    <string>odd?</string>
	    <string>or</string>
	    <string>parents</string>
	    <string>partial</string>
	    <string>partition</string>
	    <string>pcalls</string>
	    <string>peek</string>
	    <string>persistent!</string>
	    <string>pmap</string>
	    <string>pop!</string>
	    <string>pop</string>
	    <string>pos?</string>
	    <string>pr-str</string>
	    <string>pr</string>
	    <string>prefer-method</string>
	    <string>prefers</string>
	    <string>primitives-classnames</string>
	    <string>print-ctor</string>
	    <string>print-doc</string>
	    <string>print-dup</string>
	    <string>print-method</string>
	    <string>print-namespace-doc</string>
	    <string>print-simple</string>
	    <string>print-special-doc</string>
	    <string>print-str</string>
	    <string>print</string>
	    <string>printf</string>
	    <string>println-str</string>
	    <string>println</string>
	    <string>prn-str</string>
	    <string>prn</string>
	    <string>promise</string>
	    <string>proxy-call-with-super</string>
	    <string>proxy-mappings</string>
	    <string>proxy-name</string>
	    <string>proxy-super</string>
	    <string>proxy</string>
	    <string>pvalues</string>
	    <string>quot</string>
	    <string>rand-int</string>
	    <string>rand</string>
	    <string>range</string>
	    <string>ratio?</string>
	    <string>rational?</string>
	    <string>rationalize</string>
	    <string>re-find</string>
	    <string>re-groups</string>
	    <string>re-matcher</string>
	    <string>re-matches</string>
	    <string>re-pattern</string>
	    <string>re-seq</string>
	    <string>read-line</string>
	    <string>read-string</string>
	    <string>read</string>
	    <string>reduce</string>
	    <string>ref-history-count</string>
	    <string>ref-max-history</string>
	    <string>ref-min-history</string>
	    <string>ref-set</string>
	    <string>ref</string>
	    <string>refer-clojure</string>
	    <string>refer</string>
	    <string>release-pending-sends</string>
	    <string>rem</string>
	    <string>remove-method</string>
	    <string>remove-ns</string>
	    <string>remove-watch</string>
	    <string>remove-watcher</string>
	    <string>remove</string>
	    <string>repeat</string>
	    <string>repeatedly</string>
	    <string>replace</string>
	    <string>replicate</string>
	    <string>require</string>
	    <string>reset!</string>
	    <string>reset-meta!</string>
	    <string>resolve</string>
	    <string>rest</string>
	    <string>resultset-seq</string>
	    <string>reverse</string>
	    <string>reversible?</string>
	    <string>rseq</string>
	    <string>rsubseq</string>
	    <string>second</string>
	    <string>select-keys</string>
	    <string>send-off</string>
	    <string>send</string>
	    <string>seq</string>
	    <string>seq?</string>
	    <string>seque</string>
	    <string>sequence</string>
	    <string>sequential?</string>
	    <string>set-validator!</string>
	    <string>set</string>
	    <string>set?</string>
	    <string>short</string>
	    <string>shutdown-agents</string>
	    <string>slurp</string>
	    <string>some</string>
	    <string>sort-by</string>
	    <string>sort</string>
	    <string>sorted-map-by</string>
	    <string>sorted-map</string>
	    <string>sorted-set</string>
	    <string>sorted?</string>
	    <string>special-form-anchor</string>
	    <string>special-symbol?</string>
	    <string>split-at</string>
	    <string>split-with</string>
	    <string>str</string>
	    <string>stream?</string>
	    <string>string?</string>
	    <string>struct-map</string>
	    <string>struct</string>
	    <string>subs</string>
	    <string>subseq</string>
	    <string>subvec</string>
	    <string>supers</string>
	    <string>swap!</string>
	    <string>symbol</string>
	    <string>symbol?</string>
	    <string>sync</string>
	    <string>syntax-symbol-anchor</string>
	    <string>take-nth</string>
	    <string>take-while</string>
	    <string>take</string>
	    <string>test</string>
	    <string>the-ns</string>
	    <string>time</string>
	    <string>to-array-2d</string>
	    <string>to-array</string>
	    <string>trampoline</string>
	    <string>transient</string>
	    <string>tree-seq</string>
	    <string>true?</string>
	    <string>type</string>
	    <string>unchecked-add</string>
	    <string>unchecked-dec</string>
	    <string>unchecked-divide</string>
	    <string>unchecked-inc</string>
	    <string>unchecked-multiply</string>
	    <string>unchecked-negate</string>
	    <string>unchecked-remainder</string>
	    <string>unchecked-subtract</string>
	    <string>underive</string>
	    <string>unquote-splicing</string>
	    <string>unquote</string>
	    <string>update-in</string>
	    <string>update-proxy</string>
	    <string>use</string>
	    <string>val</string>
	    <string>vals</string>
	    <string>var-get</string>
	    <string>var-set</string>
	    <string>var?</string>
	    <string>vary-meta</string>
	    <string>vec</string>
	    <string>vector</string>
	    <string>vector?</string>
	    <string>when-first</string>
	    <string>when-let</string>
	    <string>when-not</string>
	    <string>when</string>
	    <string>while</string>
	    <string>with-in-str</string>
	    <string>with-loading-context</string>
	    <string>with-local-vars</string>
	    <string>with-meta</string>
	    <string>with-open</string>
	    <string>with-out-str</string>
	    <string>with-precision</string>
	    <string>xml-seq</string>
	    <string>zero?</string>
	    <string>zipmap</string>
            </keywords>
            <keywords id="Constants" color="#007F7F" useforautocomplete="yes">
				<string>true</string>
				<string>false</string>
				<string>nil</string>
            </keywords>
            <keywords id="Numbers" color="#00f" useforautocomplete="no">
				<regex>(?&lt;=[^[A-Za-z0-9]]|^)((([0-9]+\.[0-9]*)|(\.[0-9]+)([eE][+\-]?[0-9]+)?[fFlL]?)|((([1-9][0-9]*)|0[0-7]*|(0[xX][0-9a-fA-F]))(([uU][lL]?)|([lL][uU]?))?))(?=[^[A-Za-z0-9]]|$)</regex>
            </keywords>
            <keywords id="Characters" color="#00f" useforautocomplete="no">
				<regex>('.')</regex>
            </keywords>
            <keywords id="FunctionRegex" color="#003369" useforautocomplete="no">
				<regex>\(def[^() ]+ +([^() ]+)</regex>
            </keywords>
            <keywords id="Atoms, functions, and quotes" color="#750E15" useforautocomplete="no">
				<regex>:[^() ]+</regex>
				<regex>'[^() ]+</regex>
				<regex>(\|[^|]*\|)</regex>
				<regex>(#&apos;[^ ()]+)</regex>
            </keywords>
            <keywords id="(quasi)-quotes" color="#226D24" useforautocomplete="no">
				<regex>`</regex>
				<regex>~@?</regex>
            </keywords>
            <keywords id="Comments" color="#236E25" useforautocomplete="no">
				<regex>(#[+-]\([^()]*\))</regex>				<regex>(#[+-]\(([^()]|\(([^()]|\([^()]\))*\))*\))</regex>            </keywords>

        </default>
        
        <state id="Comment" color="#236E25" background-color="none" font-weight="normal" font-style="italic">
            <begin><regex>#\|</regex></begin>
            <end><regex>\|#</regex></end>
        </state>
                
        <state id="String" color="#760f15" background-color="none" font-weight="normal" font-style="normal">
            <begin><string>"</string></begin>
            <end><regex>(((?&lt;!\\)(\\\\)*)|^)"</regex></end>
        </state>
    </states>

</syntax>
