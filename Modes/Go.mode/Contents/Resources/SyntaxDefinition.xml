<?xml version="1.0" encoding="UTF-8"?>
<syntax>
	<head>
		<name>go</name>

		<charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@]]></charsintokens> 
	</head>
	<states>
		
		<default id="Base" color="#000" inverted-color="#fff">

			<keywords id="Keywords" color="#6C0540" casesensitive="yes" useforautocomplete="yes">			
				<string>break</string>
				<string>case</string>
				<string>chan</string>
				<string>const</string>
				<string>continue</string>
				<string>default</string>
				<string>defer</string>
				<string>else</string>
				<string>fallthrough</string>
				<string>false</string>
				<string>for</string>
				<string>func</string>
				<string>go</string>
				<string>goto</string>
				<string>if</string>
				<string>import</string>
				<string>interface</string>
				<string>map</string>
				<string>nil</string>
				<string>package</string>
				<string>range</string>
				<string>return</string>
				<string>select</string>
				<string>struct</string>
				<string>switch</string>
				<string>true</string>
				<string>type</string>
				<string>var</string>
				<string>iota</string>
			</keywords>

			<keywords id="Built in types" color="#000080">
				<string>uint8</string>
				<string>uint16</string>
				<string>uint32</string>
				<string>uint64</string>
				<string>int8</string>
				<string>int16</string>
				<string>int32</string>
				<string>int64</string>
				<string>float32</string>
				<string>float64</string>
				<string>byte</string>
				<string>uint</string>
				<string>int</string>
				<string>float</string>
				<string>uintptr</string>
				<string>string</string>
				<string>bool</string>
			</keywords>

			<keywords id="builtin functions" color="#881350">
				<string>len</string>
				<string>cap</string>
				<string>new</string>
				<string>make</string>
				<string>close</string>
				<string>closed</string>
				<string>print</string>
				<string>println</string>
				<string>panic</string>
				<string>panicln</string>
				<string>Alignof</string>
				<string>Offsetof</string>
				<string>Sizeof</string>
				<string>Reflect</string>
				<string>Typeof</string>
				<string>Unreflect</string>
			</keywords>
			
			<keywords id="standard packages" color="#400080" useforautocomplete="yes">
				<string>adler32</string>
				<string>aes</string>
				<string>ascii85</string>
				<string>asn1</string>
				<string>ast</string>
				<string>base64</string>
				<string>big</string>
				<string>bignum</string>
				<string>binary</string>
				<string>block</string>
				<string>bufio</string>
				<string>bytes</string>
				<string>crc32</string>
				<string>datafmt</string>
				<string>doc</string>
				<string>dwarf</string>
				<string>ebnf</string>
				<string>elf</string>
				<string>eval</string>
				<string>exec</string>
				<string>expvar</string>
				<string>flag</string>
				<string>flate</string>
				<string>fmt</string>
				<string>git85</string>
				<string>gob</string>
				<string>gosym</string>
				<string>gzip</string>
				<string>hash</string>
				<string>heap</string>
				<string>hex</string>
				<string>hmac</string>
				<string>http</string>
				<string>image</string>
				<string>io</string>
				<string>iotest</string>
				<string>iterable</string>
				<string>json</string>
				<string>list</string>
				<string>log</string>
				<string>macho</string>
				<string>malloc</string>
				<string>math</string>
				<string>md5</string>
				<string>net</string>
				<string>once</string>
				<string>os</string>
				<string>parser</string>
				<string>patch</string>
				<string>path</string>
				<string>pem</string>
				<string>png</string>
				<string>printer</string>
				<string>proc</string>
				<string>quick</string>
				<string>rand</string>
				<string>rc4</string>
				<string>reflect</string>
				<string>regexp</string>
				<string>ring</string>
				<string>rpc</string>
				<string>rsa</string>
				<string>runtime</string>
				<string>scanner</string>
				<string>script</string>
				<string>sha1</string>
				<string>sort</string>
				<string>stdio</string>
				<string>strconv</string>
				<string>strings</string>
				<string>subtle</string>
				<string>sync</string>
				<string>syscall</string>
				<string>tabwriter</string>
				<string>tar</string>
				<string>template</string>
				<string>testing</string>
				<string>time</string>
				<string>tls</string>
				<string>token</string>
				<string>unicode</string>
				<string>unsafe</string>
				<string>utf8</string>
				<string>vector</string>
				<string>x509</string>
				<string>xml</string>
				<string>zlib</string>
			</keywords>


			<!-- 
				The <state> tag specifies a state other than the default state.
				It features the same attributes as <default>.
				It has to contain a <begin> and a <end> tag which in turn have to 
				contain a <regex> tag. They can contain <keywords> tags like specified above.
				
				For example here a states for C blockcomments, C++ singleline comments and strings.
				The strings state handles escaped quotes with a lookbehind regular expression 
				(see a regex tutorial) and colors "foobar" with strings.
			-->

			<keywords id="Numbers" color="#00f" useforautocomplete="no">
				<regex>(?&lt;![\w\d_])((?:[+-]?(?:(?:[0-9]+\.[0-9]*)|(?:\.[0-9]+))(?:[eE][+\-]?[0-9]+)?[fFlL]?)|(?:(?:(?:[1-9][0-9]*)|0[0-7]*|(?:0[xX][0-9a-fA-F]+))(?:(?:[uU][lL]?)|(?:[lL][uU]?))?))(?![\w\d_])</regex>
			</keywords>
			
			<keywords id="FunctionRegex" color="#003369" useforautocomplete="no">
				<regex>([A-Za-z0-9_]+ *)\(</regex>
			</keywords>

			<state id="Comment" color="#236E25">
				<begin><regex>/\*</regex></begin>
				<end><regex>\*/</regex></end>
			</state>
			
			<state id="SingleComment" color="#236E25">
				<begin><regex>//</regex></begin>
				<end><regex>[\n\r]</regex></end>
			</state>
			
			<state id="String" color="#760f15">
				<begin><regex>"</regex></begin>
				<end><regex>(((?&lt;!\\)(\\\\)*)|^)"</regex></end>
			</state>
			<state id="String2" color="#760f15">
				<begin><regex>'</regex></begin>
				<end><regex>(((?&lt;!\\)(\\\\)*)|^)'</regex></end>
			</state>
			<state id="String3" color="#760f15">
				<begin><regex>`</regex></begin>
				<end><regex>`</regex></end>
			</state>
		</default>
		
	</states>

</syntax>